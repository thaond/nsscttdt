<%@page import="com.nss.portlet.digitalsignature.util.ArticleSignUtil"%>
<%@page import="com.liferay.portlet.journal.model.JournalArticle"%>
<%@page import="com.liferay.portlet.journal.model.JournalArticleResource"%>
<%
/**
 * Copyright (c) 2000-2009 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>


<div class="titlecategr"><h4><p><%= category %></p></h4></div>

<%
long[] entryIds = TagsEntryLocalServiceUtil.getEntryIds(scopeGroupId, tagsCategories, TagsEntryConstants.FOLKSONOMY_CATEGORY);
long[] notEntryIds = TagsEntryLocalServiceUtil.getEntryIds(scopeGroupId, notTagsCategories, TagsEntryConstants.FOLKSONOMY_CATEGORY);

if (allowEmptyResults && (entryIds.length == 0) && (notEntryIds.length == 0)) {
	entryIds = new long[] {-1};
}

Date now = new Date();

int total = TagsAssetLocalServiceUtil.getAssetsCount(scopeGroupId, classNameIds, entryIds, notEntryIds, andOperator, excludeZeroViewCount, now, now);

searchContainer.setTotal(total);

List<TagsAsset> results = new ArrayList<TagsAsset>();
//TuNV update 20101127
JournalArticleResource articleResource1 = null;
JournalArticle article = null;

List<TagsAsset> assets = TagsAssetLocalServiceUtil.getAssets(scopeGroupId, classNameIds, entryIds, notEntryIds, andOperator, orderByColumn1, orderByColumn2, orderByType1, orderByType2, excludeZeroViewCount, now, now, searchContainer.getStart(), total);

for (TagsAsset asset : assets) {
	List<TagsEntry> assetEntries = TagsEntryLocalServiceUtil.getAssetEntries(asset.getAssetId(), TagsEntryConstants.FOLKSONOMY_CATEGORY);
	
	//TuNV update 20101127
	articleResource1 = JournalArticleResourceLocalServiceUtil.getArticleResource(asset.getClassPK());
	article = JournalArticleLocalServiceUtil.getArticle(articleResource1.getGroupId(),articleResource1.getArticleId());
	if(b2){
		if(ArticleSignUtil.veriSign(article.getPrimaryKey()) != 1)
			continue;
	}else if(b3){
		if(ArticleSignUtil.veriSign(article.getPrimaryKey()) != 2)
			continue;
	}else if(b4){
		if(ArticleSignUtil.veriSign(article.getPrimaryKey()) != 0)
			continue;
	}
	//End TuNV
	for (TagsEntry assetEntry : assetEntries) {
		TagsVocabulary vocabulary = assetEntry.getVocabulary();

		if (vocabulary.getName().equals(category)) {
			if (!results.contains(asset)) {
				results.add(asset);
			}
		}
	}
}

if (results == null) {
	if (!showPortletWithNoResults) {
		renderRequest.setAttribute(WebKeys.PORTLET_CONFIGURATOR_VISIBILITY, Boolean.TRUE);
	}
%>

	
<liferay-ui:message key="there-are-no-results" />

<%
} else {
	request.setAttribute("view.jsp-results", results);
	request.setAttribute("aaa", results);
	//System.out.println("-"+results.size());
%>


		<%
		for (int assetIndex = 0; (assetIndex < results.size()) && (assetIndex < abstractDelta); assetIndex++) {
			TagsAsset asset = results.get(assetIndex);
			System.out.println("------========--------------------------------------------------"+results.size());
			String className = PortalUtil.getClassName(asset.getClassNameId());
			long classPK = asset.getClassPK();

			String title = asset.getTitle();
			String summary = StringPool.BLANK;
			String viewURL = StringPool.BLANK;
			String viewURLMessage = StringPool.BLANK;
			String editURL = StringPool.BLANK;

			boolean show = true;

			request.setAttribute("view.jsp-assetIndex", new Integer(assetIndex));

			request.setAttribute("view.jsp-asset", asset);

			request.setAttribute("view.jsp-title", title);
			request.setAttribute("view.jsp-summary", summary);
			request.setAttribute("view.jsp-viewURL", viewURL);
			request.setAttribute("view.jsp-viewURLMessage", viewURLMessage);

			request.setAttribute("view.jsp-className", className);
			request.setAttribute("view.jsp-classPK", new Long(classPK));

			request.setAttribute("view.jsp-show", new Boolean(show));

			try {
		%>
				
				<%@ include file="/html/portlet/nss/asset_publisher_index/view_display.jspf" %>

		<%
			}
			catch (Exception e) {
				_log.error(e.getMessage());
			}
		}
		%>


		<%
		for (int assetIndex = abstractDelta; (assetIndex < results.size()) && (assetIndex < delta); assetIndex++) {
			TagsAsset asset = results.get(assetIndex);

			String className = PortalUtil.getClassName(asset.getClassNameId());
			long classPK = asset.getClassPK();

			String title = asset.getTitle();
			String summary = StringPool.BLANK;
			String viewURL = StringPool.BLANK;
			String viewURLMessage = StringPool.BLANK;
			String editURL = StringPool.BLANK;

			boolean show = true;

			request.setAttribute("view.jsp-assetIndex", new Integer(assetIndex));

			request.setAttribute("view.jsp-asset", asset);

			request.setAttribute("view.jsp-title", title);
			request.setAttribute("view.jsp-summary", summary);
			request.setAttribute("view.jsp-viewURL", viewURL);
			request.setAttribute("view.jsp-viewURLMessage", viewURLMessage);

			request.setAttribute("view.jsp-className", className);
			request.setAttribute("view.jsp-classPK", new Long(classPK));

			request.setAttribute("view.jsp-show", new Boolean(show));

			try {
		%>

				<%@ include file="/html/portlet/nss/asset_publisher_index/display/nss_title_list.jsp" %>

		<%
			}
			catch (Exception e) {
				_log.error(e.getMessage());
			}
		}
		%>

<%
}
%>


<%
long[] entryIds = TagsEntryLocalServiceUtil.getEntryIds(scopeGroupId, tagsCategories, TagsEntryConstants.FOLKSONOMY_CATEGORY);
long[] notEntryIds = TagsEntryLocalServiceUtil.getEntryIds(scopeGroupId, notTagsCategories, TagsEntryConstants.FOLKSONOMY_CATEGORY);

if (allowEmptyResults && (entryIds.length == 0) && (notEntryIds.length == 0)) {
	entryIds = new long[] {-1};
}

Date now = new Date();

int total = TagsAssetLocalServiceUtil.getAssetsCount(scopeGroupId, classNameIds, entryIds, notEntryIds, andOperator, excludeZeroViewCount, now, now);

searchContainer.setTotal(total);

Map<String, List<TagsAsset>> assetsByCategory = new TreeMap<String, List<TagsAsset>>();

List<TagsAsset> assets = TagsAssetLocalServiceUtil.getAssets(scopeGroupId, classNameIds, entryIds, notEntryIds, andOperator, orderByColumn1, orderByColumn2, orderByType1, orderByType2, excludeZeroViewCount, now, now, searchContainer.getStart(), total);

for (TagsAsset asset : assets) {
	List<TagsEntry> assetEntries = TagsEntryLocalServiceUtil.getAssetEntries(asset.getAssetId(), TagsEntryConstants.FOLKSONOMY_CATEGORY);

	for (TagsEntry assetEntry : assetEntries) {
		TagsVocabulary vocabulary = assetEntry.getVocabulary();

		if (vocabulary.getName().equals(category)) {
			String tagLabel = null;

			try {
				TagsProperty descriptionProperty = TagsPropertyLocalServiceUtil.getProperty(assetEntry.getEntryId(), themeDisplay.getLanguageId());

				tagLabel = descriptionProperty.getValue();
			}
			catch (NoSuchPropertyException nspee1) {
				try {
					TagsProperty descriptionProperty = TagsPropertyLocalServiceUtil.getProperty(assetEntry.getEntryId(), "en_US");

					tagLabel = descriptionProperty.getValue();
				}
				catch (NoSuchPropertyException nspee2) {
					tagLabel = StringUtil.upperCaseFirstLetter(assetEntry.getName());
				}
			}

			List assetsList = assetsByCategory.get(tagLabel);

			if (assetsList == null) {
				assetsList = new ArrayList();

				assetsByCategory.put(tagLabel, assetsList);
			}

			assetsList.add(asset);

			break;
		}
	}
}

Iterator<Map.Entry<String, List<TagsAsset>>> itr = assetsByCategory.entrySet().iterator();

if (!itr.hasNext()) {
	if (!showPortletWithNoResults) {
		renderRequest.setAttribute(WebKeys.PORTLET_CONFIGURATOR_VISIBILITY, Boolean.TRUE);
	}
%>

	
<liferay-ui:message key="there-are-no-results" />

<%
}

while (itr.hasNext()) {
	Map.Entry<String, List<TagsAsset>> entry = itr.next();

	String tagLabel = entry.getKey();
	List<TagsAsset> results = entry.getValue();

	request.setAttribute("view.jsp-results", results);
%>

	<div class="asset-tag-entries">

		<%
		for (int assetIndex = 0; (assetIndex < results.size()) && (assetIndex < abstractDelta); assetIndex++) {
			TagsAsset asset = results.get(assetIndex);

			String className = PortalUtil.getClassName(asset.getClassNameId());
			long classPK = asset.getClassPK();

			String title = asset.getTitle();
			String summary = StringPool.BLANK;
			String viewURL = StringPool.BLANK;
			String viewURLMessage = StringPool.BLANK;
			String editURL = StringPool.BLANK;

			boolean show = true;

			request.setAttribute("view.jsp-assetIndex", new Integer(assetIndex));

			request.setAttribute("view.jsp-asset", asset);

			request.setAttribute("view.jsp-title", title);
			request.setAttribute("view.jsp-summary", summary);
			request.setAttribute("view.jsp-viewURL", viewURL);
			request.setAttribute("view.jsp-viewURLMessage", viewURLMessage);

			request.setAttribute("view.jsp-className", className);
			request.setAttribute("view.jsp-classPK", new Long(classPK));

			request.setAttribute("view.jsp-show", new Boolean(show));

			try {
		%>
				
				<%@ include file="/html/portlet/nss/tinmoi/view_display.jspf" %>

		<%
			}
			catch (Exception e) {
				_log.error(e.getMessage());
			}
		}
		%>

	</div>
	<div class="asset-tag-entries">

		<%
		for (int assetIndex = abstractDelta; (assetIndex < results.size()) && (assetIndex < delta); assetIndex++) {
			TagsAsset asset = results.get(assetIndex);

			String className = PortalUtil.getClassName(asset.getClassNameId());
			long classPK = asset.getClassPK();

			String title = asset.getTitle();
			String summary = StringPool.BLANK;
			String viewURL = StringPool.BLANK;
			String viewURLMessage = StringPool.BLANK;
			String editURL = StringPool.BLANK;

			boolean show = true;

			request.setAttribute("view.jsp-assetIndex", new Integer(assetIndex));

			request.setAttribute("view.jsp-asset", asset);

			request.setAttribute("view.jsp-title", title);
			request.setAttribute("view.jsp-summary", summary);
			request.setAttribute("view.jsp-viewURL", viewURL);
			request.setAttribute("view.jsp-viewURLMessage", viewURLMessage);

			request.setAttribute("view.jsp-className", className);
			request.setAttribute("view.jsp-classPK", new Long(classPK));

			request.setAttribute("view.jsp-show", new Boolean(show));

			try {
		%>

				<%@ include file="/html/portlet/nss/tinmoi/display/nss_title_list.jsp" %>

		<%
			}
			catch (Exception e) {
				_log.error(e.getMessage());
			}
		}
		%>

	</div>

<%
}
%>

